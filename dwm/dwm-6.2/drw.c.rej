--- drw.c
+++ drw.c
@@ -15,6 +15,7 @@ static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0}
 static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};
 static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};
 static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};
+Clr transcheme[3];
 
 static long
 utf8decodebyte(const char c, size_t *i)
@@ -222,6 +223,15 @@ drw_setscheme(Drw *drw, Clr *scm)
 		drw->scheme = scm;
 }
 
+void
+drw_settrans(Drw *drw, Clr *psc, Clr *nsc)
+{
+        if (drw) {
+            transcheme[0] = psc[ColBg]; transcheme[1] = nsc[ColBg]; transcheme[2] = psc[ColBorder];
+            drw->scheme = transcheme;
+        }
+}
+
 void
 drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)
 {
@@ -364,6 +374,30 @@ drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lp
 	return x + (render ? w : 0);
 }
 
+void
+drw_arrow(Drw *drw, int x, int y, unsigned int w, unsigned int h, int direction, int slash)
+{
+        if (!drw)
+                return;
+
+        /* direction=1 draws right arrow */
+        x = direction ? x : x + w;
+        w = direction ? w : -w;
+        /* slash=1 draws slash instead of arrow */
+        unsigned int hh = slash ? (direction ? 0 : h) : h/2;
+
+        XPoint points[] = {
+                {x    , y      },
+                {x + w, y + hh },
+                {x    , y + h  },
+        };
+
+        XSetForeground(drw->dpy, drw->gc, drw->scheme[ColBg].pixel);
+        XFillRectangle(drw->dpy, drw->drawable, drw->gc, x, y, w, h);
+        XSetForeground(drw->dpy, drw->gc, drw->scheme[ColFg].pixel);
+        XFillPolygon(drw->dpy, drw->drawable, drw->gc, points, 3, Nonconvex, CoordModeOrigin);
+}
+
 void
 drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)
 {
